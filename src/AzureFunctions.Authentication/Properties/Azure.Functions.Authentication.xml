<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AzureFunctions.Authentication</name>
    </assembly>
    <members>
        <member name="T:Azure.Functions.Authentication.Authorization.FunctionAuthorizationHandlerProvider">
            <summary>
            Combines default Azure Function authorization handler with custom application authorization handler
            </summary>
        </member>
        <member name="T:Azure.Functions.Authentication.Authorization.FunctionPolicyEvaluator">
            <summary>
            Overrides default policy evaluator to pass combined default and application authorization handlers.
            See <see cref="T:Azure.Functions.Authentication.Authorization.FunctionAuthorizationHandlerProvider"/> for more details
            </summary>
        </member>
        <member name="T:Azure.Functions.Authentication.FunctionAuthenticationExtensionConfigProvider">
            <summary>
            Extension that registers custom authentication scheme after application finished bootstrap.
            This step is required to avoid overriding internal authentication schemes registration
            </summary>
        </member>
        <member name="T:Azure.Functions.Authentication.Helpers.OptionsConfigurator`1">
            <summary>
            Registers configure action for specified Options class
            </summary>
            <typeparam name="TOptions"></typeparam>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.FunctionAuthenticationExtensions.AddFunctionAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers services required by authentication services and configures <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationOptions"/>
            without affecting internal authentication services registered by Azure Functions Host
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/> that can be used to further configure authentication.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.FunctionAuthenticationExtensions.AddFunctionAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Authentication.AuthenticationOptions})">
            <summary>
            Registers services required by authentication services and configures <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationOptions"/>
            without affecting internal authentication services registered by Azure Functions Host
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <param name="configureOptions">A delegate to configure <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationOptions"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/> that can be used to further configure authentication.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.FunctionAuthenticationExtensions.AddFunctionAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions})">
            <summary>
            Adds authorization policy services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />
            without affecting internal authentication services registered by Azure Functions Host
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
            <param name="configure">An action delegate to configure the provided <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationOptions"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> so that additional calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.FunctionAuthenticationExtensions.GetFieldValue``1(System.Object,System.String)">
            <summary>
            Gets object's field by name through Reflection.
            </summary>
            <typeparam name="TValue">Value Type.</typeparam>
            <param name="instance">Object intance.</param>
            <param name="fieldName">Name of field.</param>
            <returns>Retrieved value.</returns>
        </member>
    </members>
</doc>
